exclude: manager.py
default_stages: [commit]

repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v2.2.3
    hooks:
    -   id: fix-encoding-pragma
        stages: [commit]
    -   id: trailing-whitespace
        stages: [commit]
        types: [python]
    -   id: mixed-line-ending
        stages: [commit]
        types: [python]
    -   id: end-of-file-fixer
        stages: [commit]
        types: [python]
    -   id: flake8
        stages: [commit]

-   repo: https://github.com/asottile/reorder_python_imports
    rev: v1.5.0
    hooks:
    -   id: reorder-python-imports
        stages: [commit]
        language: python

-   repo: https://github.com/asottile/pyupgrade
    rev: v1.18.0
    hooks:
    -   id: pyupgrade
        stages: [commit]

#-   repo: https://github.com/pre-commit/mirrors-mypy
#    rev: v0.701
#    hooks:
#    -   id: mypy
#        stages: [commit]
#        exclude: ^(docs/|example-plugin/|tests/fixtures)
#        args: ["--py2"]
#        language_version: python3

#-   repo: https://github.com/ambv/black
#    rev: 19.3b0
#    hooks:
#    -   id: black
#        stages: [commit]
#        args: ["--fast", "--line-length=120"]

-   repo: https://github.com/pre-commit/mirrors-autopep8
    rev: v1.4.4
    hooks:
    -   id: autopep8
        stages: [commit]

-   repo: local
    hooks:
    -   id: start
        name: start services
        entry: bash -c 'python manager.py start' && echo #
        language: system
        files: (py|json|Pipfile)$
        pass_filenames: false
        require_serial: true
        stages: [push]
        verbose: true
    -   id: test
        name: run coverage, cases and unittest
        entry: bash -c 'bash -c "echo > /tmp/test.log; python manager.py run test" > /tmp/test.log 2>&1 && echo -e "\e[92mSave log\072 /tmp/test.log\e[0m"'
        language: system
        files: (py|json|Pipfile)$
        pass_filenames: false
        require_serial: true
        stages: [push]
        verbose: true
    -   id: result
        name: show test result
        entry: python -c "import re,sys; f=file('/tmp/test.log');s=((re.findall('.*', f.read(), re.S) + [''])[0].strip());print (s); f.close(); sys.exit(0 if s else 1)"
        language: system
        files: (py|json|Pipfile)$
        pass_filenames: false
        require_serial: true
        stages: [push]
        verbose: true

